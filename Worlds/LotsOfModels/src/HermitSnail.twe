class HermitSnail extends Slitherer models HermitSnail {
  HermitSnail() {
    super(resource: HermitSnail.DEFAULT, tailArray: null);
  }

  static TextString DEFAULT <- "HermitSnail/DEFAULT";
  @CompletelyHidden static JointId TAIL_1 <- new JointId(name: "TAIL_1", parent: Slitherer.TAIL_0);
  @CompletelyHidden static JointId TAIL_2 <- new JointId(name: "TAIL_2", parent: HermitSnail.TAIL_1);
  @CompletelyHidden static JointId TAIL_3 <- new JointId(name: "TAIL_3", parent: HermitSnail.TAIL_2);
  @CompletelyHidden static JointId TAIL_4 <- new JointId(name: "TAIL_4", parent: HermitSnail.TAIL_3);
  @CompletelyHidden static JointId SHELL_0 <- new JointId(name: "SHELL_0", parent: Slitherer.TAIL_0);
  @CompletelyHidden static JointId SHELL_1 <- new JointId(name: "SHELL_1", parent: HermitSnail.SHELL_0);
  @PrimeTime static JointId LOWER_LIP <- new JointId(name: "LOWER_LIP", parent: Slitherer.MOUTH);
  @CompletelyHidden static JointId LEFT_TENTACLE_0 <- new JointId(name: "LEFT_TENTACLE_0", parent: Slitherer.HEAD);
  @CompletelyHidden static JointId LEFT_TENTACLE_1 <- new JointId(name: "LEFT_TENTACLE_1", parent: HermitSnail.LEFT_TENTACLE_0);
  @CompletelyHidden static JointId LEFT_TENTACLE_2 <- new JointId(name: "LEFT_TENTACLE_2", parent: HermitSnail.LEFT_TENTACLE_1);
  @CompletelyHidden static JointId RIGHT_TENTACLE_0 <- new JointId(name: "RIGHT_TENTACLE_0", parent: Slitherer.HEAD);
  @CompletelyHidden static JointId RIGHT_TENTACLE_1 <- new JointId(name: "RIGHT_TENTACLE_1", parent: HermitSnail.RIGHT_TENTACLE_0);
  @CompletelyHidden static JointId RIGHT_TENTACLE_2 <- new JointId(name: "RIGHT_TENTACLE_2", parent: HermitSnail.RIGHT_TENTACLE_1);

  @CompletelyHidden static JointId[] SHELL_ARRAY = {HermitSnail.SHELL_0, HermitSnail.SHELL_1};
  @CompletelyHidden static JointId[] LEFT_TENTACLE_ARRAY = {HermitSnail.LEFT_TENTACLE_0, HermitSnail.LEFT_TENTACLE_1, HermitSnail.LEFT_TENTACLE_2};
  @CompletelyHidden static JointId[] RIGHT_TENTACLE_ARRAY = {HermitSnail.RIGHT_TENTACLE_0, HermitSnail.RIGHT_TENTACLE_1, HermitSnail.RIGHT_TENTACLE_2};

  SJoint getLowerLip() {
    return this.getJoint(jointId: HermitSnail.LOWER_LIP);
  }

  SJoint[] getShellArray() {
    return this.getJointArray(jointIdArray: HermitSnail.SHELL_ARRAY);
  }

  SJoint[] getLeftTentacleArray() {
    return this.getJointArray(jointIdArray: HermitSnail.LEFT_TENTACLE_ARRAY);
  }

  SJoint[] getRightTentacleArray() {
    return this.getJointArray(jointIdArray: HermitSnail.RIGHT_TENTACLE_ARRAY);
  }
}
