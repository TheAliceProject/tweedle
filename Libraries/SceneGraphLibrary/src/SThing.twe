class SThing {
  SThing() {
  }

  @CompletelyHidden VantagePoint getVantagePoint(SThing asSeenBy) {
    if (asSeenBy == vehicle) {
      return getLocalTransformation();
    }
    if (asSeenBy.isSceneOf(other: this)) {
      return getAbsoluteTransformation();
    }
    if (asSeenBy == this) {
      return VantagePoint.IDENTITY;
    }
    return asSeenBy.getInverseAbsoluteTransformation().multiply(other: getAbsoluteTransformation());
  }

  @CompletelyHidden VantagePoint getAbsoluteTransformation() {
    if ((vehicle == null) || vehicle.isSceneOf(other: this)) {
      return getLocalTransformation();
    }
    return vehicle.getAbsoluteTransformation().multiply(other: getLocalTransformation());
  }

  @CompletelyHidden VantagePoint getInverseAbsoluteTransformation() {
    return $SceneGraph.getInverseAbsoluteTransformation(thing: this);
  }

  @CompletelyHidden VantagePoint getLocalTransformation() {
    return $SceneGraph.getLocalTransformation(thing: this);
  }

  @CompletelyHidden Position getTranslation(SThing asSeenBy) {
    return this.getVantagePoint(asSeenBy: asSeenBy).position;
  }

  @CompletelyHidden Position getMinPoint(SThing asSeenBy) {
    return this.getTranslation(asSeenBy: asSeenBy);
  }

  @CompletelyHidden Position getMaxPoint(SThing asSeenBy) {
    return this.getTranslation(asSeenBy: asSeenBy);
  }

  @TuckedAway TextString getName() {
    return this.name;
  }

  @TuckedAway void setName(TextString name) {
    this.name <- name;
    $SceneGraph.setEntityName(thing: this, name: name);
  }

  void delay(Duration duration) {
    $Clock.delay(duration: duration);
  }

  void playAudio(AudioSource audioSource) {
    $SceneGraph.playAudio(entity: this, sound: audioSource.audioResource, volume: audioSource.volume, startTime: audioSource.startTime, stopTime: audioSource.stopTime );
  }

  Boolean isCollidingWith(SThing other) {
    // To be based on AabbCollisionDetector.doTheseCollide(). AABB may stand for AxisAlignedBoundingBox.
    return $SceneGraph.doTheseCollide(targetA: this, targetB: other);
  }

  Boolean getBooleanFromUser(TextString message) {
    return $Dialog.getBooleanFromUser(message: message);
  }

  TextString getStringFromUser(TextString message) {
    return $Dialog.getStringFromUser(message: message);
  }

  DecimalNumber getDoubleFromUser(TextString message) {
    return $Dialog.getDoubleFromUser(message: message);
  }

  WholeNumber getIntegerFromUser(TextString message) {
    return $Dialog.getIntegerFromUser(message: message);
  }

  @CompletelyHidden Boolean isSceneOf(SThing other) {
    return this == other.getScene();
  }

  @CompletelyHidden SScene getScene() {
    if (this.vehicle == null) {
      return null;
    } else {
      return this.vehicle.getScene();
    }
  }

  SThing getVehicle() {
    return this.vehicle;
  }

  TextString toString() {
    if(this.name != null) {
      return this.name;
    } else {
      return "unnamed " .. $System.getClassName(instance: this);
    }
  }

  @CompletelyHidden SThing vehicle <- null;
  @CompletelyHidden TextString name <- "Unnamed";
}
