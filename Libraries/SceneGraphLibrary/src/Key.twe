enum Key {
    ENTER(value: $Key.ENTER),
    BACK_SPACE(value: $Key.BACK_SPACE),
    TAB(value: $Key.TAB),
    CANCEL(value: $Key.CANCEL),
    CLEAR(value: $Key.CLEAR),
    SHIFT(value: $Key.SHIFT),
    CONTROL(value: $Key.CONTROL),
    ALT(value: $Key.ALT),
    PAUSE(value: $Key.PAUSE),
    CAPS_LOCK(value: $Key.CAPS_LOCK),
    ESCAPE(value: $Key.ESCAPE),
    SPACE(value: $Key.SPACE),
    PAGE_UP(value: $Key.PAGE_UP),
    PAGE_DOWN(value: $Key.PAGE_DOWN),
    END(value: $Key.END),
    HOME(value: $Key.HOME),
    LEFT(value: $Key.LEFT),
    UP(value: $Key.UP),
    RIGHT(value: $Key.RIGHT),
    DOWN(value: $Key.DOWN),
    COMMA(value: $Key.COMMA),
    MINUS(value: $Key.MINUS),
    PERIOD(value: $Key.PERIOD),
    SLASH(value: $Key.SLASH),
    DIGIT_0(value: $Key.DIGIT_0, isDigit: true),
    DIGIT_1(value: $Key.DIGIT_1, isDigit: true),
    DIGIT_2(value: $Key.DIGIT_2, isDigit: true),
    DIGIT_3(value: $Key.DIGIT_3, isDigit: true),
    DIGIT_4(value: $Key.DIGIT_4, isDigit: true),
    DIGIT_5(value: $Key.DIGIT_5, isDigit: true),
    DIGIT_6(value: $Key.DIGIT_6, isDigit: true),
    DIGIT_7(value: $Key.DIGIT_7, isDigit: true),
    DIGIT_8(value: $Key.DIGIT_8, isDigit: true),
    DIGIT_9(value: $Key.DIGIT_9, isDigit: true),
    SEMICOLON(value: $Key.SEMICOLON),
    EQUALS(value: $Key.EQUALS),
    A(value: $Key.A, isLetter: true),
    B(value: $Key.B, isLetter: true),
    C(value: $Key.C, isLetter: true),
    D(value: $Key.D, isLetter: true),
    E(value: $Key.E, isLetter: true),
    F(value: $Key.F, isLetter: true),
    G(value: $Key.G, isLetter: true),
    H(value: $Key.H, isLetter: true),
    I(value: $Key.I, isLetter: true),
    J(value: $Key.J, isLetter: true),
    K(value: $Key.K, isLetter: true),
    L(value: $Key.L, isLetter: true),
    M(value: $Key.M, isLetter: true),
    N(value: $Key.N, isLetter: true),
    O(value: $Key.O, isLetter: true),
    P(value: $Key.P, isLetter: true),
    Q(value: $Key.Q, isLetter: true),
    R(value: $Key.R, isLetter: true),
    S(value: $Key.S, isLetter: true),
    T(value: $Key.T, isLetter: true),
    U(value: $Key.U, isLetter: true),
    V(value: $Key.V, isLetter: true),
    W(value: $Key.W, isLetter: true),
    X(value: $Key.X, isLetter: true),
    Y(value: $Key.Y, isLetter: true),
    Z(value: $Key.Z, isLetter: true),
    OPEN_BRACKET(value: $Key.OPEN_BRACKET),
    BACK_SLASH(value: $Key.BACK_SLASH),
    CLOSE_BRACKET(value: $Key.CLOSE_BRACKET),
    NUMPAD0(value: $Key.NUMPAD0, isDigit: true),
    NUMPAD1(value: $Key.NUMPAD1, isDigit: true),
    NUMPAD2(value: $Key.NUMPAD2, isDigit: true),
    NUMPAD3(value: $Key.NUMPAD3, isDigit: true),
    NUMPAD4(value: $Key.NUMPAD4, isDigit: true),
    NUMPAD5(value: $Key.NUMPAD5, isDigit: true),
    NUMPAD6(value: $Key.NUMPAD6, isDigit: true),
    NUMPAD7(value: $Key.NUMPAD7, isDigit: true),
    NUMPAD8(value: $Key.NUMPAD8, isDigit: true),
    NUMPAD9(value: $Key.NUMPAD9, isDigit: true),
    MULTIPLY(value: $Key.MULTIPLY),
    ADD(value: $Key.ADD),
    SEPARATOR(value: $Key.SEPARATOR),
    SUBTRACT(value: $Key.SUBTRACT),
    DECIMAL(value: $Key.DECIMAL),
    DIVIDE(value: $Key.DIVIDE),
    DELETE(value: $Key.DELETE),
    NUM_LOCK(value: $Key.NUM_LOCK),
    SCROLL_LOCK(value: $Key.SCROLL_LOCK),
    F1(value: $Key.F1),
    F2(value: $Key.F2),
    F3(value: $Key.F3),
    F4(value: $Key.F4),
    F5(value: $Key.F5),
    F6(value: $Key.F6),
    F7(value: $Key.F7),
    F8(value: $Key.F8),
    F9(value: $Key.F9),
    F10(value: $Key.F10),
    F11(value: $Key.F11),
    F12(value: $Key.F12),
    F13(value: $Key.F13),
    F14(value: $Key.F14),
    F15(value: $Key.F15),
    F16(value: $Key.F16),
    F17(value: $Key.F17),
    F18(value: $Key.F18),
    F19(value: $Key.F19),
    F20(value: $Key.F20),
    F21(value: $Key.F21),
    F22(value: $Key.F22),
    F23(value: $Key.F23),
    F24(value: $Key.F24),
    PRINTSCREEN(value: $Key.PRINTSCREEN),
    INSERT(value: $Key.INSERT),
    HELP(value: $Key.HELP),
    META(value: $Key.META),
    BACK_QUOTE(value: $Key.BACK_QUOTE),
    QUOTE(value: $Key.QUOTE),
    KP_UP(value: $Key.KP_UP),
    KP_DOWN(value: $Key.KP_DOWN),
    KP_LEFT(value: $Key.KP_LEFT),
    KP_RIGHT(value: $Key.KP_RIGHT),
    DEAD_GRAVE(value: $Key.DEAD_GRAVE),
    DEAD_ACUTE(value: $Key.DEAD_ACUTE),
    DEAD_CIRCUMFLEX(value: $Key.DEAD_CIRCUMFLEX),
    DEAD_TILDE(value: $Key.DEAD_TILDE),
    DEAD_MACRON(value: $Key.DEAD_MACRON),
    DEAD_BREVE(value: $Key.DEAD_BREVE),
    DEAD_ABOVEDOT(value: $Key.DEAD_ABOVEDOT),
    DEAD_DIAERESIS(value: $Key.DEAD_DIAERESIS),
    DEAD_ABOVERING(value: $Key.DEAD_ABOVERING),
    DEAD_DOUBLEACUTE(value: $Key.DEAD_DOUBLEACUTE),
    DEAD_CARON(value: $Key.DEAD_CARON),
    DEAD_CEDILLA(value: $Key.DEAD_CEDILLA),
    DEAD_OGONEK(value: $Key.DEAD_OGONEK),
    DEAD_IOTA(value: $Key.DEAD_IOTA),
    DEAD_VOICED_SOUND(value: $Key.DEAD_VOICED_SOUND),
    DEAD_SEMIVOICED_SOUND(value: $Key.DEAD_SEMIVOICED_SOUND),
    AMPERSAND(value: $Key.AMPERSAND),
    ASTERISK(value: $Key.ASTERISK),
    QUOTEDBL(value: $Key.QUOTEDBL),
    LESS(value: $Key.LESS),
    GREATER(value: $Key.GREATER),
    BRACELEFT(value: $Key.BRACELEFT),
    BRACERIGHT(value: $Key.BRACERIGHT),
    AT(value: $Key.AT),
    COLON(value: $Key.COLON),
    CIRCUMFLEX(value: $Key.CIRCUMFLEX),
    DOLLAR(value: $Key.DOLLAR),
    EURO_SIGN(value: $Key.EURO_SIGN),
    EXCLAMATION_MARK(value: $Key.EXCLAMATION_MARK),
    INVERTED_EXCLAMATION_MARK(value: $Key.INVERTED_EXCLAMATION_MARK),
    LEFT_PARENTHESIS(value: $Key.LEFT_PARENTHESIS),
    NUMBER_SIGN(value: $Key.NUMBER_SIGN),
    PLUS(value: $Key.PLUS),
    RIGHT_PARENTHESIS(value: $Key.RIGHT_PARENTHESIS),
    UNDERSCORE(value: $Key.UNDERSCORE),
    WINDOWS(value: $Key.WINDOWS),
    CONTEXT_MENU(value: $Key.CONTEXT_MENU),
    FINAL(value: $Key.FINAL),
    CONVERT(value: $Key.CONVERT),
    NONCONVERT(value: $Key.NONCONVERT),
    ACCEPT(value: $Key.ACCEPT),
    MODECHANGE(value: $Key.MODECHANGE),
    KANA(value: $Key.KANA),
    KANJI(value: $Key.KANJI),
    ALPHANUMERIC(value: $Key.ALPHANUMERIC),
    KATAKANA(value: $Key.KATAKANA),
    HIRAGANA(value: $Key.HIRAGANA),
    FULL_WIDTH(value: $Key.FULL_WIDTH),
    HALF_WIDTH(value: $Key.HALF_WIDTH),
    ROMAN_CHARACTERS(value: $Key.ROMAN_CHARACTERS),
    ALL_CANDIDATES(value: $Key.ALL_CANDIDATES),
    PREVIOUS_CANDIDATE(value: $Key.PREVIOUS_CANDIDATE),
    CODE_INPUT(value: $Key.CODE_INPUT),
    JAPANESE_KATAKANA(value: $Key.JAPANESE_KATAKANA),
    JAPANESE_HIRAGANA(value: $Key.JAPANESE_HIRAGANA),
    JAPANESE_ROMAN(value: $Key.JAPANESE_ROMAN),
    KANA_LOCK(value: $Key.KANA_LOCK),
    INPUT_METHOD_ON_OFF(value: $Key.INPUT_METHOD_ON_OFF),
    CUT(value: $Key.CUT),
    COPY(value: $Key.COPY),
    PASTE(value: $Key.PASTE),
    UNDO(value: $Key.UNDO),
    AGAIN(value: $Key.AGAIN),
    FIND(value: $Key.FIND),
    PROPS(value: $Key.PROPS),
    STOP(value: $Key.STOP),
    COMPOSE(value: $Key.COMPOSE),
    ALT_GRAPH(value: $Key.ALT_GRAPH),
    BEGIN(value: $Key.BEGIN),
    LEFT_TRIGGER(value: $Key.LEFT_TRIGGER),
    RIGHT_TRIGGER(value: $Key.RIGHT_TRIGGER),
    LEFT_GRIP(value: $Key.LEFT_GRIP),
    RIGHT_GRIP(value: $Key.RIGHT_GRIP),
    LEFT_PRIMARY(value: $Key.LEFT_PRIMARY),
    RIGHT_PRIMARY(value: $Key.RIGHT_PRIMARY),
    LEFT_SECONDARY(value: $Key.LEFT_SECONDARY),
    RIGHT_SECONDARY(value: $Key.RIGHT_SECONDARY),
    LEFT_AXIS_UP(value: $Key.LEFT_AXIS_UP),
    RIGHT_AXIS_UP(value: $Key.RIGHT_AXIS_UP),
    LEFT_AXIS_DOWN(value: $Key.LEFT_AXIS_DOWN),
    RIGHT_AXIS_DOWN(value: $Key.RIGHT_AXIS_DOWN),
    LEFT_AXIS_LEFT(value: $Key.LEFT_AXIS_LEFT),
    RIGHT_AXIS_LEFT(value: $Key.RIGHT_AXIS_LEFT),
    LEFT_AXIS_RIGHT(value: $Key.LEFT_AXIS_RIGHT),
    RIGHT_AXIS_RIGHT(value: $Key.RIGHT_AXIS_RIGHT),
    LEFT_THUMBSTICK_CLICK(value: $Key.LEFT_THUMBSTICK_CLICK),
    RIGHT_THUMBSTICK_CLICK(value: $Key.RIGHT_THUMBSTICK_CLICK),
    LEFT_MENU(value: $Key.LEFT_MENU),
    RIGHT_MENU(value: $Key.RIGHT_MENU),
    UNDEFINED(value: $Key.UNDEFINED);


	Key(WholeNumber value, Boolean isDigit <- false, Boolean isLetter <- false) {
		this.value <- value;
		this.isDigit <- isDigit;
		this.isLetter <- isLetter;
	}

	WholeNumber getValue() {
		return this.value;
	}

	@CompletelyHidden WholeNumber value;
	@CompletelyHidden Boolean isDigit;
	@CompletelyHidden Boolean isLetter;
}
